+1) Удалить модель, контроллер и вьюхи для Product

+2) Создать удаленные ключи на таблицу user из task и task_user, и на task из task_user.
    Для этого создать миграцию со след. командами и накатить ее, 
	использовать для отката метод dropForeignKey().
    При выполнении миграций м.б. проблемы если в прошлом ДЗ 
	в таблицах заполнены несуществующие ид, 
	проще всего просто очистить таблицы от данных.

    $this->addForeignKey('fx_taskuser_user', 'task_user', ['user_id'], 'user', ['id']);
    $this->addForeignKey('fx_taskuser_task', 'task_user', ['task_id'], 'task', ['id']);
    $this->addForeignKey('fx_task_user1', 'task', ['creator_id'], 'user', ['id']);
    $this->addForeignKey('fx_task_user2', 'task', ['updater_id'], 'user', ['id']);

+3) Переименовать модель User в UserBase ( в пхпшторме будьте внимательны), 
для 3 таблиц которые создали в прошлом ДЗ сгенерировать в Gii модели, 
включив создание ActiveQuery и по моделям код CRUD . Изучить созданные модели, 
особенно обращая внимание на созданные методы для получения связанных данных.

+4) В UserController создать экшен test, в нем используя ActiveRecord, 
т.е. методы классов User и Task,
    выполнить последовательно, наблюдая выполняемые запросы в debug-панели:
    а) Создать запись в таблице user.
    б) Создать три связаные (с записью в user) запиcи в task, используя метод link().
    в) Прочитать из базы все записи из User 
	применив жадную подгрузку связанных данных из Task, с запросами без JOIN.
    г) Прочитать из базы все записи из User 
	применив жадную подгрузку связанных данных из Task, с запросом содержащим JOIN.

Дополнительно

+5) Добавить в Task метод релейшена getAccessedUsers, 
связывающий Task и User через релейшен taskUsers, 
проверить - добавить с помощью созданного релейшена 
связь между записями в Task и User (метод link()) 
и получить из модели задачи список пользователей которым она доступна.

